{"version":3,"sources":["src/store/configure.js"],"names":["configureStore","initialState","history","hasWindow","window","sagaMiddleware","finalCreateStore","applyMiddleware","middlewares","devToolsExtension","f","createStore","store","reducer","sagaTask","run","sagas","module","hot","accept","nextReducer","require","default","replaceReducer","nextSagas","cancel","done","then"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAChD,MAAMC,YAAY,OAAOC,MAAP,KAAkB,WAApC;AACA,MAAMC,iBAAiB,0BAAvB;;AAEA,MAAMC,mBAAmB,oBACvBC,2DAAmBC,qBAAnB,UAAgCH,cAAhC,EAAgD,wCAAiBH,OAAjB,CAAhD,GADuB,EAEvBC,aAAaC,OAAOK,iBAApB,GAAwCL,OAAOK,iBAAP,EAAxC,GAAqE,UAACC,CAAD;AAAA,WAAOA,CAAP;AAAA,GAF9C,EAGvBC,kBAHuB,CAAzB;;AAKA,MAAMC,QAAQN,iBAAiBO,iBAAjB,EAA0BZ,YAA1B,CAAd;AACA,MAAIa,WAAWT,eAAeU,GAAf,CAAmBC,eAAnB,CAAf;;AAEA,MAAIC,OAAOC,GAAX,EAAgB;AACdD,WAAOC,GAAP,CAAWC,MAAX,CAAkB,WAAlB,EAA+B,YAAM;AACnC,UAAMC,cAAcC,QAAQ,WAAR,EAAqBC,OAAzC;AACAV,YAAMW,cAAN,CAAqBH,WAArB;AACD,KAHD;AAIAH,WAAOC,GAAP,CAAWC,MAAX,CAAkB,SAAlB,EAA6B,YAAM;AACjC,UAAMK,YAAYH,QAAQ,SAAR,EAAmBC,OAArC;AACAR,eAASW,MAAT;AACAX,eAASY,IAAT,CAAcC,IAAd,CAAmB,YAAM;AACvBb,mBAAWT,eAAeU,GAAf,CAAmBS,SAAnB,CAAX;AACD,OAFD;AAGD,KAND;AAOD;;AAED,SAAOZ,KAAP;AACD,CA3BD;;eA6BeZ,c;;;;;;;;;gCA7BTA,c","file":"configure.js","sourceRoot":"/home/ubuntu/testdir/HW2/SWPP_HW2/reservation","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'react-router-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport middlewares from './middlewares'\nimport reducer from './reducer'\nimport sagas from './sagas'\n\nconst configureStore = (initialState, history) => {\n  const hasWindow = typeof window !== 'undefined'\n  const sagaMiddleware = createSagaMiddleware()\n\n  const finalCreateStore = compose(\n    applyMiddleware(...middlewares, sagaMiddleware, routerMiddleware(history)),\n    hasWindow && window.devToolsExtension ? window.devToolsExtension() : (f) => f\n  )(createStore)\n\n  const store = finalCreateStore(reducer, initialState)\n  let sagaTask = sagaMiddleware.run(sagas)\n\n  if (module.hot) {\n    module.hot.accept('./reducer', () => {\n      const nextReducer = require('./reducer').default\n      store.replaceReducer(nextReducer)\n    })\n    module.hot.accept('./sagas', () => {\n      const nextSagas = require('./sagas').default\n      sagaTask.cancel()\n      sagaTask.done.then(() => {\n        sagaTask = sagaMiddleware.run(nextSagas)\n      })\n    })\n  }\n\n  return store\n}\n\nexport default configureStore\n"]}