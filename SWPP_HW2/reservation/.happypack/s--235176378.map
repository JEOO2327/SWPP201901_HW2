{"version":3,"sources":["src/store/meetinglist/reducer.js"],"names":["meetinglist_reducer","state","initialState","action","type","console","log","localStorage","setItem","JSON","stringify","meetingList","username","password","Buffer","toString","token","removeItem","parse","concat","meetingInfoList","getItem","newList","filter","meeting","id"],"mappings":";;;;;;;;AAAA;;AAGA,IAAMA,sBAAsB,SAAtBA,mBAAsB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBC,uBAAyB;AAAA,MAAXC,MAAW;;AAC5D,UAAQA,OAAOC,IAAf;;AAGI;AACF,SAAK,eAAL;AACA;AACEC,cAAQC,GAAR,CAAY,gBAAZ;AACJ;AACF;;AAEMC,mBAAaC,OAAb,CAAqB,aAArB,EAAoCC,KAAKC,SAAL,CAAeP,OAAOQ,WAAtB,CAApC,EANF,CAM0E;AACxEJ,mBAAaC,OAAb,CAAqB,UAArB,EAAiCL,OAAOS,QAAxC;AACAL,mBAAaC,OAAb,CAAqB,UAArB,EAAiCL,OAAOU,QAAxC;AACAN,mBAAaC,OAAb,CAAqB,OAArB,EAA8B,IAAIM,MAAJ,CAAcX,OAAOS,QAArB,SAAiCT,OAAOU,QAAxC,EAAoDE,QAApD,CAA6D,QAA7D,CAA9B;AACN;AACM,aAAO;AACLH,kBAAWT,OAAOS,QADb;AAELD,qBAAcF,KAAKC,SAAL,CAAeP,OAAOQ,WAAtB,CAFT;AAGLK,eAAQ,IAAIF,MAAJ,CAAcX,OAAOS,QAArB,SAAiCT,OAAOU,QAAxC,EAAoDE,QAApD,CAA6D,QAA7D;AAHH,OAAP;;AAMF,SAAK,YAAL;AACEV,cAAQC,GAAR,CAAY,uBAAZ;AACAC,mBAAaU,UAAb,CAAwB,OAAxB;AACAV,mBAAaU,UAAb,CAAwB,aAAxB;AACAV,mBAAaU,UAAb,CAAwB,UAAxB;AACAV,mBAAaU,UAAb,CAAwB,UAAxB;AACA,aAAO;AACLN,qBAAc,IADT;AAELC,kBAAW,IAFN;AAGLI,eAAQ;AAHH,OAAP;;AAMF,SAAK,gBAAL;AACEX,cAAQC,GAAR,CAAY,2BAAZ;AACAC,mBAAaU,UAAb,CAAwB,UAAxB;AACAV,mBAAaU,UAAb,CAAwB,OAAxB;AACAV,mBAAaU,UAAb,CAAwB,UAAxB;AACAV,mBAAaU,UAAb,CAAwB,aAAxB;;AAEA,aAAM;AACJL,kBAAW,IADP;AAEJD,qBAAc,IAFV;AAGJK,eAAQ;;AAGZ;AANQ,OAAN,CAOF,KAAK,cAAL;;AAEJ;AACA;AACA;;AAEMT,mBAAaC,OAAb,CAAqB,aAArB,EAAmCC,KAAKC,SAAL,CAAeD,KAAKS,KAAL,CAAWjB,MAAMU,WAAjB,EAA8BQ,MAA9B,CAAqChB,OAAOiB,eAA5C,CAAf,CAAnC,EANF,CAMoH;AACtH;AACI,0BACInB,KADJ;AAEEU,qBAAcJ,aAAac,OAAb,CAAqB,aAArB;AAFhB;;AAKF,SAAK,WAAL;AACEhB,cAAQC,GAAR,CAAY,sBAAZ;AACA,0BACKL,KADL;;AAKF;AACA,SAAK,gBAAL;AACI,UAAMqB,UAAUb,KAAKS,KAAL,CAAWX,aAAac,OAAb,CAAqB,aAArB,CAAX,CAAhB;AACJ;AACF;AACMd,mBAAaC,OAAb,CAAqB,aAArB,EAAoCC,KAAKC,SAAL,CAAeY,QAAQC,MAAR,CAAe;AAAA,eAAWC,QAAQC,EAAR,KAAetB,OAAOsB,EAAjC;AAAA,OAAf,CAAf,CAApC;;AAEApB,cAAQC,GAAR,CAAY,kCAAmCG,KAAKC,SAAL,CAAeY,QAAQC,MAAR,CAAe;AAAA,eAC1EC,QAAQC,EAAR,KAAetB,OAAOsB,EADoD;AAAA,OAAf,CAAf,CAA/C;;AAIF,0BACKxB,KADL;AAEEU,qBAAcJ,aAAac,OAAb,CAAqB,aAArB;AAFhB;;AAKF;AACI,aAAOpB,KAAP;AApFN;AAsFA;AACD,CAxFD;;eA0FeD,mB;;;;;;;;;gCA1FTA,mB","file":"reducer.js","sourceRoot":"/home/ubuntu/testdir/HW2/SWPP_HW2/reservation","sourcesContent":["import { initialState } from './selectors'\n\n\nconst meetinglist_reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n\n      //Login,Logout reducer\n    case 'LOGIN_SUCCESS' :\n    //  console.log(action);\n      console.log('Login Success!');\n  //    console.log('username' + action.username);\n//      console.log('password' + action.password);\n\n      localStorage.setItem(\"meetingList\", JSON.stringify(action.meetingList)) //string 안에 배열이 들어있는 형태로 저장\n      localStorage.setItem(\"username\", action.username)\n      localStorage.setItem(\"password\", action.password)\n      localStorage.setItem(\"token\", new Buffer(`${action.username}:${action.password}`).toString('base64'))\n//      console.log(\"reducer login success meetinglist : \" + action.meetingList)\n      return {\n        username : action.username,\n        meetingList : JSON.stringify(action.meetingList),\n        token : new Buffer(`${action.username}:${action.password}`).toString('base64')\n      }\n\n    case 'LOGIN_FAIL' :\n      console.log('reducer : LogIn Fail!')\n      localStorage.removeItem(\"token\")\n      localStorage.removeItem(\"meetingList\")\n      localStorage.removeItem(\"username\")\n      localStorage.removeItem(\"password\")\n      return {\n        meetingList : null,\n        username : null,\n        token : null,\n      };\n\n    case 'LOGOUT_REQUEST' :\n      console.log('reducer : logOut Request!');\n      localStorage.removeItem(\"username\")\n      localStorage.removeItem(\"token\")\n      localStorage.removeItem(\"password\")\n      localStorage.removeItem(\"meetingList\")\n\n      return{\n        username : null,\n        meetingList : null,\n        token : null,\n      }\n\n    //Post reducer\n    case 'POST_SUCCESS' :\n\n//      console.log(\"state. meeting_parse : \" + JSON.parse(state.meetingList))\n//      console.log(\"PO_SUC action.meetingList : \" + action.meetingInfoList)\n//      console.log(\"PO_SUC action.meetingList_parse : \" + JSON.parse(action.meetingInfoList))\n\n      localStorage.setItem(\"meetingList\",JSON.stringify(JSON.parse(state.meetingList).concat(action.meetingInfoList))); //string 안에 배열이 들어잇는형태로 저장\n  //    console.log(\"after POST_SUCCESS local.meetingList : \" + localStorage.getItem(\"meetingList\"))\n      return {\n       ...state,\n        meetingList : localStorage.getItem(\"meetingList\"),\n      }\n\n    case 'POST_FAIL' :\n      console.log('reducer : Post Fail!')\n      return {\n        ...state,\n      }\n\n\n    //delete reducer\n    case 'DELETE_SUCCESS' :\n        const newList = JSON.parse(localStorage.getItem(\"meetingList\"));\n    //    console.log(\"newlist : \" + newList)\n  //      console.log(\"action id : \" + action.id)\n        localStorage.setItem(\"meetingList\", JSON.stringify(newList.filter(meeting => meeting.id !== action.id)))\n\n        console.log(\"reducer delete_succ - list : \" +  JSON.stringify(newList.filter(meeting =>\n           meeting.id !== action.id\n         )))\n\n      return {\n        ...state,\n        meetingList : localStorage.getItem(\"meetingList\")\n      };\n\n    default :\n        return state\n  }\n  //function for login\n}\n\nexport default meetinglist_reducer\n"]}