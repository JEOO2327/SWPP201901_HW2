{"version":3,"sources":["src/services/api/index.js"],"names":["checkStatus","response","ok","error","Error","status","statusText","parseJSON","json","parseSettings","method","data","locale","otherSettings","headers","Accept","settings","body","JSON","stringify","undefined","parseEndpoint","endpoint","params","url","indexOf","apiUrl","querystring","api","request","fetch","then","forEach","create","setToken","token","Authorization","unsetToken","post","get","put","patch","delete"],"mappings":"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","file":"index.js","sourceRoot":"/home/ubuntu/testdir/HW2/SWPP_HW2/reservation","sourcesContent":["import 'whatwg-fetch'\nimport { stringify } from 'query-string'\nimport merge from 'lodash/merge'\nimport { apiUrl } from 'config'\n\nexport const checkStatus = (response) => {\n  if (response.ok) {\n    return response\n  }\n  const error = new Error(`${response.status} ${response.statusText}`)\n  error.response = response\n  throw error\n}\n\nexport const parseJSON = response => response.json()\n\nexport const parseSettings = ({ method = 'get', data, locale, ...otherSettings } = {}) => {\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'Accept-Language': locale,\n  }\n  const settings = {\n    body: data ? JSON.stringify(data) : undefined,\n    method,\n    headers,\n    ...otherSettings,\n  }\n  return settings\n}\n\nexport const parseEndpoint = (endpoint, params) => {\n  const url = endpoint.indexOf('http') === 0 ? endpoint : apiUrl + endpoint\n  const querystring = params ? `?${stringify(params)}` : ''\n  return `${url}${querystring}`\n}\n\nconst api = {}\n\napi.request = (endpoint, { params, ...settings } = {}) =>\n  fetch(parseEndpoint(endpoint, params), parseSettings(settings))\n    .then(checkStatus)\n    .then(parseJSON)\n\n;['delete', 'get'].forEach((method) => {\n  api[method] = (endpoint, settings) => api.request(endpoint, { method, ...settings })\n})\n\n;['post', 'put', 'patch'].forEach((method) => {\n  api[method] = (endpoint, data, settings) => api.request(endpoint, { method, data, ...settings })\n})\n\napi.create = (settings = {}) => ({\n  settings,\n\n  setToken(token) {\n    this.settings.headers = {\n      ...this.settings.headers,\n      Authorization: `Bearer ${token}`,\n    }\n  },\n\n  unsetToken() {\n    this.settings.headers = {\n      ...this.settings.headers,\n      Authorization: undefined,\n    }\n  },\n\n  request(endpoint, settings) {\n    return api.request(endpoint, merge({}, this.settings, settings))\n  },\n\n  post(endpoint, data, settings) {\n    return this.request(endpoint, { method: 'post', data, ...settings })\n  },\n\n  get(endpoint, settings) {\n    return this.request(endpoint, { method: 'get', ...settings })\n  },\n\n  put(endpoint, data, settings) {\n    return this.request(endpoint, { method: 'put', data, ...settings })\n  },\n\n  patch(endpoint, data, settings) {\n    return this.request(endpoint, { method: 'patch', data, ...settings })\n  },\n\n  delete(endpoint, settings) {\n    return this.request(endpoint, { method: 'delete', ...settings })\n  },\n})\n\nexport default api\n"]}